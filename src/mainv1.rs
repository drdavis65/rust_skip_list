mod skiplist;

use skiplist::SkipList;
use crate::skiplist::get_max_level;
use std::cmp::Ordering;

fn int_comparator(a: &i32, b: &i32) -> Ordering {
    a.cmp(b)
}

fn main() {
    // Create a skip list similar to the C version
    let max_level = get_max_level(1000, 0.5);
    println!("max level: {}", max_level);
    
    let mut skip_list = SkipList::new(max_level, 0.5, int_comparator);
    let list_data = vec![
        (1, 'q'), (2, 't'), (3, 'w'), (4, 'h'), (5, 'y'), (6, 'x'), (7, 'f'), (8, 'n'), (9, 'l'), (10, 'x'), 
        (11, 'm'), (12, 'j'), (13, 'q'), (14, 'e'), (15, 'z'), (16, 'h'), (17, 'm'), (18, 'e'), (19, 'h'), (20, 'n'), 
        (21, 'h'), (22, 'n'), (23, 'k'), (24, 'g'), (25, 't'), (26, 'g'), (27, 'j'), (28, 'i'), (29, 'r'), (30, 'b'), 
        (31, 'j'), (32, 'q'), (33, 'r'), (34, 'e'), (35, 'e'), (36, 't'), (37, 'v'), (38, 'g'), (39, 'k'), (40, 'o'), 
        (41, 't'), (42, 'z'), (43, 'a'), (44, 'x'), (45, 'r'), (46, 'n'), (47, 'b'), (48, 'p'), (49, 'a'), (50, 's'), 
        (51, 'i'), (52, 'b'), (53, 'c'), (54, 'p'), (55, 'j'), (56, 'n'), (57, 's'), (58, 'y'), (59, 'j'), (60, 'm'), 
        (61, 'm'), (62, 'm'), (63, 'u'), (64, 'k'), (65, 'i'), (66, 'c'), (67, 's'), (68, 'd'), (69, 'f'), (70, 'r'), 
        (71, 'w'), (72, 'f'), (73, 'q'), (74, 'i'), (75, 'y'), (76, 'c'), (77, 'k'), (78, 'h'), (79, 'r'), (80, 'a'), 
        (81, 'w'), (82, 'u'), (83, 'd'), (84, 'i'), (85, 't'), (86, 'n'), (87, 'm'), (88, 'j'), (89, 'w'), (90, 'e'), 
        (91, 'm'), (92, 'r'), (93, 'w'), (94, 'd'), (95, 'v'), (96, 'm'), (97, 'w'), (98, 'g'), (99, 'w'), (100, 'z'), 
        (101, 'a'), (102, 'w'), (103, 'p'), (104, 'p'), (105, 'v'), (106, 'b'), (107, 'm'), (108, 'y'), (109, 'h'), (110, 'u'), 
        (111, 'z'), (112, 'j'), (113, 'b'), (114, 'c'), (115, 'c'), (116, 'h'), (117, 'v'), (118, 'o'), (119, 'l'), (120, 'q'), 
        (121, 'n'), (122, 'b'), (123, 'i'), (124, 'i'), (125, 'w'), (126, 'h'), (127, 'p'), (128, 'w'), (129, 'v'), (130, 'y'), 
        (131, 'j'), (132, 'r'), (133, 'z'), (134, 'j'), (135, 'j'), (136, 'c'), (137, 'j'), (138, 'd'), (139, 'a'), (140, 'q'), 
        (141, 'z'), (142, 'p'), (143, 'x'), (144, 'l'), (145, 'y'), (146, 'c'), (147, 's'), (148, 'k'), (149, 'z'), (150, 'w'), 
        (151, 'j'), (152, 'n'), (153, 'j'), (154, 'e'), (155, 'p'), (156, 't'), (157, 'z'), (158, 'i'), (159, 'b'), (160, 't'), 
        (161, 'v'), (162, 'q'), (163, 'u'), (164, 'i'), (165, 'e'), (166, 'd'), (167, 'q'), (168, 'a'), (169, 'i'), (170, 'i'), 
        (171, 'v'), (172, 'w'), (173, 'n'), (174, 'o'), (175, 'w'), (176, 'l'), (177, 'z'), (178, 'u'), (179, 's'), (180, 'k'), 
        (181, 'q'), (182, 'u'), (183, 'q'), (184, 'q'), (185, 'y'), (186, 'y'), (187, 'g'), (188, 'x'), (189, 'k'), (190, 'k'), 
        (191, 'j'), (192, 'c'), (193, 'f'), (194, 's'), (195, 'o'), (196, 'o'), (197, 'z'), (198, 'b'), (199, 'v'), (200, 'w'), 
        (201, 'p'), (202, 'q'), (203, 'z'), (204, 'w'), (205, 'h'), (206, 'z'), (207, 'z'), (208, 'v'), (209, 'e'), (210, 'i'), 
        (211, 'o'), (212, 'v'), (213, 'd'), (214, 'y'), (215, 'p'), (216, 'b'), (217, 'z'), (218, 'f'), (219, 'k'), (220, 'a'), 
        (221, 't'), (222, 'r'), (223, 'd'), (224, 'b'), (225, 'g'), (226, 'a'), (227, 'q'), (228, 'l'), (229, 'h'), (230, 't'), 
        (231, 'p'), (232, 'n'), (233, 'y'), (234, 'q'), (235, 'k'), (236, 'x'), (237, 'j'), (238, 'h'), (239, 'w'), (240, 'n'), 
        (241, 'a'), (242, 'q'), (243, 'h'), (244, 'x'), (245, 'e'), (246, 'a'), (247, 'z'), (248, 'd'), (249, 'd'), (250, 'b'), 
        (251, 'x'), (252, 'm'), (253, 'l'), (254, 'm'), (255, 's'), (256, 'n'), (257, 't'), (258, 'u'), (259, 'q'), (260, 'j'), 
        (261, 'w'), (262, 'g'), (263, 'y'), (264, 'n'), (265, 'p'), (266, 'r'), (267, 'f'), (268, 'i'), (269, 'w'), (270, 'y'), 
        (271, 'y'), (272, 'g'), (273, 'x'), (274, 't'), (275, 'm'), (276, 'o'), (277, 's'), (278, 'm'), (279, 'f'), (280, 'o'), 
        (281, 'r'), (282, 'm'), (283, 'r'), (284, 'i'), (285, 'n'), (286, 'x'), (287, 'k'), (288, 'h'), (289, 's'), (290, 'b'), 
        (291, 'y'), (292, 'w'), (293, 'l'), (294, 'l'), (295, 'd'), (296, 'b'), (297, 'a'), (298, 'k'), (299, 't'), (300, 'f'), 
        (301, 'r'), (302, 'z'), (303, 'k'), (304, 'o'), (305, 'l'), (306, 'v'), (307, 's'), (308, 'u'), (309, 'u'), (310, 'n'), 
        (311, 'k'), (312, 'w'), (313, 'r'), (314, 'o'), (315, 'v'), (316, 'o'), (317, 't'), (318, 'h'), (319, 'c'), (320, 'e'), 
        (321, 'k'), (322, 'b'), (323, 'u'), (324, 's'), (325, 'a'), (326, 'k'), (327, 'y'), (328, 'l'), (329, 'c'), (330, 'x'), 
        (331, 'x'), (332, 'w'), (333, 'e'), (334, 'n'), (335, 'd'), (336, 'k'), (337, 'x'), (338, 'h'), (339, 'a'), (340, 'c'), 
        (341, 'r'), (342, 'n'), (343, 'w'), (344, 'v'), (345, 'l'), (346, 'l'), (347, 'n'), (348, 'j'), (349, 'g'), (350, 'm'), 
        (351, 't'), (352, 's'), (353, 'k'), (354, 'w'), (355, 'l'), (356, 'i'), (357, 'f'), (358, 'b'), (359, 'u'), (360, 't'), 
        (361, 'h'), (362, 'y'), (363, 'i'), (364, 'e'), (365, 'e'), (366, 'o'), (367, 'w'), (368, 'a'), (369, 'p'), (370, 'x'), 
        (371, 't'), (372, 'o'), (373, 'i'), (374, 'b'), (375, 'l'), (376, 'k'), (377, 'r'), (378, 'p'), (379, 'l'), (380, 'r'), 
        (381, 'u'), (382, 'q'), (383, 'k'), (384, 'w'), (385, 'm'), (386, 'y'), (387, 'p'), (388, 'r'), (389, 'h'), (390, 'q'), 
        (391, 'w'), (392, 'j'), (393, 'g'), (394, 'u'), (395, 'n'), (396, 'c'), (397, 'x'), (398, 'y'), (399, 'x'), (400, 'z'), 
        (401, 'y'), (402, 'g'), (403, 'c'), (404, 'h'), (405, 's'), (406, 'e'), (407, 'w'), (408, 'i'), (409, 'g'), (410, 'w'), 
        (411, 't'), (412, 'g'), (413, 'g'), (414, 'c'), (415, 'x'), (416, 'w'), (417, 'i'), (418, 'g'), (419, 'q'), (420, 'w'), 
        (421, 'u'), (422, 'r'), (423, 'h'), (424, 'c'), (425, 'i'), (426, 'l'), (427, 'p'), (428, 'e'), (429, 'k'), (430, 't'), 
        (431, 'b'), (432, 'c'), (433, 'p'), (434, 'k'), (435, 'r'), (436, 't'), (437, 'z'), (438, 'o'), (439, 'k'), (440, 'j'), 
        (441, 's'), (442, 'l'), (443, 'l'), (444, 'w'), (445, 'y'), (446, 's'), (447, 't'), (448, 'x'), (449, 't'), (450, 'w'), 
        (451, 'k'), (452, 'c'), (453, 'f'), (454, 's'), (455, 'u'), (456, 'u'), (457, 'y'), (458, 'm'), (459, 's'), (460, 'p'), 
        (461, 'n'), (462, 'u'), (463, 'h'), (464, 's'), (465, 'h'), (466, 'h'), (467, 'c'), (468, 't'), (469, 'w'), (470, 'g'), 
        (471, 's'), (472, 'p'), (473, 'l'), (474, 'p'), (475, 'c'), (476, 'k'), (477, 'v'), (478, 'g'), (479, 'b'), (480, 'v'), 
        (481, 'z'), (482, 'g'), (483, 't'), (484, 'k'), (485, 'z'), (486, 'q'), (487, 'f'), (488, 't'), (489, 'a'), (490, 'q'), 
        (491, 'x'), (492, 'p'), (493, 'k'), (494, 'b'), (495, 'v'), (496, 'q'), (497, 'b'), (498, 'j'), (499, 'r'), (500, 'l'), 
        (501, 's'), (502, 'b'), (503, 'h'), (504, 'x'), (505, 'i'), (506, 's'), (507, 'n'), (508, 's'), (509, 'd'), (510, 'n'), 
        (511, 'w'), (512, 'j'), (513, 'j'), (514, 'p'), (515, 'w'), (516, 'u'), (517, 'v'), (518, 'x'), (519, 'j'), (520, 'y'), 
        (521, 'e'), (522, 'q'), (523, 'k'), (524, 'd'), (525, 'd'), (526, 'y'), (527, 'w'), (528, 'm'), (529, 'w'), (530, 'g'), 
        (531, 'k'), (532, 'n'), (533, 'o'), (534, 'w'), (535, 'r'), (536, 'r'), (537, 's'), (538, 'v'), (539, 'd'), (540, 'v'), 
        (541, 'j'), (542, 'r'), (543, 'b'), (544, 'g'), (545, 'q'), (546, 't'), (547, 'm'), (548, 'v'), (549, 'x'), (550, 'x'), 
        (551, 'z'), (552, 't'), (553, 'e'), (554, 'v'), (555, 'o'), (556, 'w'), (557, 'r'), (558, 'f'), (559, 'e'), (560, 'a'), 
        (561, 'y'), (562, 'r'), (563, 'c'), (564, 'x'), (565, 'y'), (566, 'q'), (567, 'v'), (568, 'n'), (569, 'h'), (570, 'p'), 
        (571, 'b'), (572, 'o'), (573, 'f'), (574, 'g'), (575, 'n'), (576, 'w'), (577, 'n'), (578, 'z'), (579, 'n'), (580, 'x'), 
        (581, 'z'), (582, 'm'), (583, 'r'), (584, 'w'), (585, 'b'), (586, 'o'), (587, 'd'), (588, 'p'), (589, 'f'), (590, 'k'), 
        (591, 'm'), (592, 's'), (593, 'e'), (594, 'u'), (595, 'x'), (596, 'i'), (597, 'g'), (598, 'u'), (599, 'z'), (600, 'e'), 
        (601, 'q'), (602, 't'), (603, 'r'), (604, 't'), (605, 'f'), (606, 'i'), (607, 'f'), (608, 's'), (609, 's'), (610, 'h'), 
        (611, 'h'), (612, 's'), (613, 'u'), (614, 'r'), (615, 's'), (616, 'q'), (617, 'a'), (618, 'n'), (619, 'w'), (620, 'w'), 
        (621, 'z'), (622, 'g'), (623, 'b'), (624, 'w'), (625, 'q'), (626, 'l'), (627, 'i'), (628, 'o'), (629, 'g'), (630, 'l'), 
        (631, 'o'), (632, 'q'), (633, 'w'), (634, 'q'), (635, 'p'), (636, 's'), (637, 'n'), (638, 'a'), (639, 'v'), (640, 'k'), 
        (641, 'h'), (642, 'y'), (643, 'p'), (644, 'p'), (645, 'f'), (646, 'r'), (647, 'z'), (648, 'd'), (649, 'j'), (650, 'o'), 
        (651, 'z'), (652, 'e'), (653, 'd'), (654, 'p'), (655, 'm'), (656, 'd'), (657, 'z'), (658, 'n'), (659, 'y'), (660, 'n'), 
        (661, 'n'), (662, 'e'), (663, 'e'), (664, 't'), (665, 'h'), (666, 'k'), (667, 'u'), (668, 'm'), (669, 'm'), (670, 't'), 
        (671, 'o'), (672, 'a'), (673, 'b'), (674, 'h'), (675, 's'), (676, 'i'), (677, 'm'), (678, 'w'), (679, 'i'), (680, 'l'), 
        (681, 'k'), (682, 'v'), (683, 'f'), (684, 't'), (685, 'p'), (686, 'd'), (687, 'i'), (688, 'h'), (689, 'y'), (690, 'e'), 
        (691, 's'), (692, 'g'), (693, 'p'), (694, 'p'), (695, 'd'), (696, 'r'), (697, 'l'), (698, 'u'), (699, 's'), (700, 'h'), 
        (701, 'i'), (702, 'p'), (703, 'o'), (704, 'n'), (705, 'v'), (706, 'i'), (707, 'u'), (708, 'k'), (709, 'd'), (710, 'h'), 
        (711, 'k'), (712, 'b'), (713, 'm'), (714, 'j'), (715, 'g'), (716, 's'), (717, 'c'), (718, 'y'), (719, 'q'), (720, 'j'), 
        (721, 'a'), (722, 'q'), (723, 'k'), (724, 'v'), (725, 'h'), (726, 'm'), (727, 'd'), (728, 'r'), (729, 'a'), (730, 'n'), 
        (731, 'z'), (732, 'p'), (733, 'u'), (734, 'x'), (735, 'o'), (736, 'f'), (737, 'a'), (738, 't'), (739, 't'), (740, 'j'), 
        (741, 's'), (742, 'v'), (743, 'j'), (744, 'g'), (745, 'k'), (746, 't'), (747, 'l'), (748, 'b'), (749, 'y'), (750, 'z'), 
        (751, 'p'), (752, 'f'), (753, 'z'), (754, 'x'), (755, 'a'), (756, 'b'), (757, 'x'), (758, 'o'), (759, 'g'), (760, 'l'), 
        (761, 't'), (762, 'v'), (763, 'l'), (764, 'h'), (765, 'k'), (766, 'j'), (767, 'j'), (768, 'i'), (769, 'z'), (770, 'v'), 
        (771, 'i'), (772, 'b'), (773, 'h'), (774, 'r'), (775, 'b'), (776, 'k'), (777, 'i'), (778, 'g'), (779, 'z'), (780, 'l'), 
        (781, 't'), (782, 'v'), (783, 't'), (784, 'd'), (785, 'd'), (786, 'q'), (787, 'x'), (788, 'e'), (789, 'g'), (790, 'j'), 
        (791, 'i'), (792, 'z'), (793, 'w'), (794, 'z'), (795, 'j'), (796, 'x'), (797, 'm'), (798, 't'), (799, 'k'), (800, 'n'), 
        (801, 'c'), (802, 'j'), (803, 'b'), (804, 'y'), (805, 'h'), (806, 'u'), (807, 'p'), (808, 'v'), (809, 'f'), (810, 'g'), 
        (811, 'n'), (812, 'b'), (813, 'p'), (814, 'b'), (815, 'u'), (816, 'f'), (817, 't'), (818, 'w'), (819, 'a'), (820, 'i'), 
        (821, 'g'), (822, 'j'), (823, 's'), (824, 'm'), (825, 'n'), (826, 'f'), (827, 'k'), (828, 'p'), (829, 's'), (830, 'r'), 
        (831, 'f'), (832, 'v'), (833, 'x'), (834, 'g'), (835, 'k'), (836, 'n'), (837, 'l'), (838, 's'), (839, 'g'), (840, 'z'), 
        (841, 'i'), (842, 'b'), (843, 'o'), (844, 'i'), (845, 'u'), (846, 'd'), (847, 'e'), (848, 's'), (849, 'b'), (850, 't'), 
        (851, 'f'), (852, 'r'), (853, 'c'), (854, 'k'), (855, 'z'), (856, 'w'), (857, 'j'), (858, 'e'), (859, 'w'), (860, 'm'), 
        (861, 'c'), (862, 'j'), (863, 'e'), (864, 'q'), (865, 'c'), (866, 'w'), (867, 'o'), (868, 'p'), (869, 's'), (870, 'q'), 
        (871, 'l'), (872, 'q'), (873, 'd'), (874, 'q'), (875, 'd'), (876, 'x'), (877, 's'), (878, 'o'), (879, 'c'), (880, 'y'), 
        (881, 'z'), (882, 't'), (883, 'g'), (884, 'l'), (885, 'f'), (886, 'v'), (887, 'p'), (888, 'r'), (889, 'x'), (890, 'w'), 
        (891, 'i'), (892, 'k'), (893, 'k'), (894, 's'), (895, 'b'), (896, 'f'), (897, 'q'), (898, 't'), (899, 'd'), (900, 'y'), 
        (901, 'c'), (902, 'f'), (903, 'w'), (904, 'b'), (905, 'o'), (906, 'l'), (907, 'o'), (908, 'u'), (909, 'y'), (910, 'c'), 
        (911, 'e'), (912, 'i'), (913, 'w'), (914, 's'), (915, 'd'), (916, 'g'), (917, 'o'), (918, 'b'), (919, 'm'), (920, 'x'), 
        (921, 'q'), (922, 'j'), (923, 't'), (924, 'x'), (925, 'e'), (926, 'v'), (927, 'h'), (928, 'f'), (929, 'p'), (930, 'd'), 
        (931, 't'), (932, 'y'), (933, 'l'), (934, 'p'), (935, 'l'), (936, 'f'), (937, 'o'), (938, 'q'), (939, 'n'), (940, 't'), 
        (941, 'r'), (942, 'b'), (943, 'v'), (944, 'l'), (945, 't'), (946, 'i'), (947, 'e'), (948, 'z'), (949, 'f'), (950, 'n'), 
        (951, 'e'), (952, 'd'), (953, 'f'), (954, 'w'), (955, 'n'), (956, 'j'), (957, 'f'), (958, 'c'), (959, 'l'), (960, 'b'), 
        (961, 'j'), (962, 'h'), (963, 'j'), (964, 'j'), (965, 'n'), (966, 'r'), (967, 'l'), (968, 'c'), (969, 'b'), (970, 'z'), 
        (971, 'i'), (972, 'd'), (973, 'c'), (974, 'b'), (975, 'c'), (976, 'a'), (977, 'g'), (978, 'z'), (979, 'd'), (980, 'f'), 
        (981, 'h'), (982, 's'), (983, 'q'), (984, 'c'), (985, 'j'), (986, 'm'), (987, 'x'), (988, 'l'), (989, 't'), (990, 'l'), 
        (991, 's'), (992, 'b'), (993, 'g'), (994, 'l'), (995, 'm'), (996, 't'), (997, 'x'), (998, 'c'), (999, 'r'), (1000, 'i'), 
    ];
    // println!("\n=== Testing Insertions ===");
    for i in list_data {
        let result = skip_list.insert(i.0, i.1);
        println!("Inserted {}:{} -- {:?}", i.0, i.1, result);
    }
    let list_data2 = vec![
        (372, 'p'), (264, 'm'), (448, 'j'), (753, 'x'), (150, 'z'), (430, 'u'), (717, 's'), (816, 'm'), (558, 't'), (653, 'q'), 
        (844, 'k'), (672, 'c'), (45, 'z'), (332, 'u'), (765, 'n'), (767, 'b'), (390, 'n'), (639, 'r'), (616, 'h'), (977, 'u'), 
        (787, 'm'), (581, 'k'), (795, 'f'), (107, 'm'), (994, 'h'), (932, 'a'), (691, 'j'), (550, 'g'), (1, 'e'), (584, 'q'), 
        (283, 'z'), (431, 'r'), (967, 's'), (819, 'w'), (292, 'f'), (527, 'a'), (699, 'b'), (150, 't'), (663, 'n'), (395, 'd'), 
        (205, 'x'), (203, 'h'), (541, 'c'), (637, 'd'), (971, 'o'), (689, 'i'), (73, 'x'), (118, 'l'), (474, 'm'), (137, 'r'), 
        (755, 'k'), (110, 'h'), (113, 'v'), (644, 'v'), (404, 'k'), (150, 's'), (726, 'o'), (911, 'e'), (265, 's'), (44, 'z'), 
        (225, 's'), (610, 'c'), (672, 'v'), (652, 'd'), (121, 'l'), (322, 'q'), (234, 'f'), (871, 'v'), (806, 'w'), (749, 's'), 
        (624, 'g'), (142, 'g'), (451, 'p'), (224, 'n'), (974, 'i'), (434, 'q'), (716, 'p'), (464, 'b'), (787, 'o'), (368, 'f'), 
        (594, 'a'), (465, 'w'), (746, 'm'), (292, 'p'), (635, 'p'), (527, 'o'), (875, 'x'), (495, 'f'), (436, 'm'), (837, 'g'), 
        (129, 'k'), (40, 'o'), (243, 'c'), (80, 'n'), (658, 'u'), (850, 'o'), (657, 'l'), (860, 'x'), (178, 'v'), (58, 'i'), 
        (270, 'u'), (849, 't'), (466, 's'), (225, 'u'), (160, 'l'), (661, 'j'), (857, 'n'), (23, 'x'), (878, 'p'), (86, 's'), 
        (415, 't'), (771, 'y'), (998, 'm'), (330, 's'), (395, 'x'), (709, 'z'), (639, 'l'), (796, 'i'), (286, 'p'), (511, 'a'), 
        (988, 'a'), (129, 'r'), (11, 'z'), (753, 'u'), (534, 'h'), (328, 'e'), (618, 's'), (186, 'y'), (624, 'a'), (541, 'n'), 
        (890, 'y'), (217, 'b'), (728, 'h'), (363, 'e'), (348, 's'), (51, 'w'), (347, 'e'), (802, 'a'), (647, 'o'), (786, 'y'), 
        (550, 'q'), (117, 'x'), (318, 'x'), (571, 't'), (352, 'a'), (470, 'h'), (851, 't'), (31, 'r'), (565, 'r'), (803, 'z'), 
        (731, 'q'), (10, 'v'), (206, 'x'), (289, 'u'), (24, 'b'), (841, 's'), (102, 'm'), (5, 'l'), (848, 's'), (62, 'o'), 
        (520, 'k'), (937, 'x'), (279, 'k'), (110, 'k'), (611, 'u'), (38, 'b'), (653, 'o'), (398, 'l'), (335, 'q'), (813, 'c'), 
        (88, 't'), (740, 'x'), (63, 'y'), (581, 'b'), (324, 'a'), (709, 'w'), (927, 's'), (78, 'b'), (110, 'w'), (147, 'z'), 
        (586, 'v'), (535, 'j'), (775, 'a'), (89, 'h'), (422, 'v'), (471, 'm'), (61, 'w'), (325, 'n'), (277, 'b'), (507, 'w'), 
        (842, 'h'), (40, 'l'), (86, 'w'), (809, 'a'), (940, 'v'), (118, 'w'), (321, 'v'), (14, 'j'), (466, 'k'), (194, 'm'), 
        (873, 'd'), (933, 's'), (875, 'f'), (29, 'j'), (696, 'n'), (180, 'c'), (358, 'u'), (275, 'u'), (90, 'n'), (974, 'q'), 
        (921, 'b'), (231, 'y'), (180, 'h'), (63, 'g'), (603, 'a'), (185, 'j'), (769, 'd'), (386, 'p'), (721, 'f'), (551, 'r'), 
        (218, 'l'), (76, 'i'), (852, 'm'), (445, 'w'), (775, 'b'), (573, 'e'), (187, 'i'), (908, 'y'), (495, 'z'), (971, 'm'), 
        (984, 'e'), (231, 'q'), (447, 's'), (368, 'f'), (608, 'v'), (682, 'w'), (971, 'z'), (935, 'e'), (196, 'y'), (32, 'o'), 
        (427, 'c'), (265, 's'), (833, 'u'), (965, 'k'), (991, 'h'), (39, 'f'), (295, 'q'), (998, 'r'), (584, 'e'), (460, 'v'), 
    ];

    for j in list_data2 {
        let result = skip_list.insert(j.0, j.1);
        println!("Inserted {}:{} -- {:?}", j.0, j.1, result);
    }    
    // skip_list.display_list(Some(|key: &i32, data: &char| {
    //     print!("{:>6}:{}", key, data);
    // }));

    let removals = vec![
        798, 633, 846, 555, 15, 803, 516, 515, 480, 696, 308, 427, 781, 730, 406, 94, 55, 457, 712, 459, 398, 397, 305, 15, 188, 
        580, 597, 138, 765, 538, 697, 927, 267, 326, 773, 640, 611, 361, 775, 339, 116, 118, 814, 834, 936, 877, 118, 60, 345, 757, 
        730, 231, 965, 673, 941, 534, 628, 957, 572, 637, 488, 718, 144, 140, 68, 214, 460, 536, 222, 251, 993, 987, 766, 494, 303, 
        435, 179, 50, 624, 616, 472, 941, 24, 131, 794, 654, 831, 699, 488, 831, 882, 680, 128, 272, 654, 114, 56, 417, 535, 688, 
        318, 394, 278, 291, 980, 107, 324, 1000, 938, 221, 917, 697, 316, 278, 293, 638, 252, 180, 705, 306, 318, 856, 26, 232, 504, 
        47, 773, 568, 713, 73, 706, 844, 528, 398, 314, 1, 776, 939, 766, 222, 886, 665, 244, 702, 230, 457, 68, 696, 264, 182, 
        486, 43, 377, 392, 403, 781, 791, 865, 880, 191, 806, 780, 916, 512, 908, 165, 319, 933, 273, 257, 830, 109, 562, 672, 616, 
        418, 179, 830, 280, 179, 966, 662, 51, 469, 85, 906, 173, 732, 751, 390, 809, 907, 517, 793, 77, 193, 37, 796, 910, 11, 
        764, 79, 733, 111, 686, 5, 449, 12, 955, 935, 375, 980, 578, 172, 378, 564, 835, 45, 572, 72, 325, 232, 853, 962, 37, 
        524, 759, 585, 108, 316, 340, 909, 962, 270, 568, 107, 604, 569, 247, 510, 654, 297, 249, 891, 696, 211, 519, 225, 683, 105,
    ];
    for key in removals {
        match skip_list.remove(&key) {
            Some(data) => println!("Removed: {}:{}", key, data),
            None => println!("Unable to remove {}, key not found", key),
        }
    }
    let searches = vec![
        745, 398, 464, 757, 22, 33, 130, 438, 547, 719, 510, 759, 825, 931, 245, 811, 530, 539, 40, 601, 960, 764, 350, 219, 87, 
        685, 52, 927, 608, 39, 456, 430, 652, 405, 33, 443, 588, 874, 252, 249, 118, 466, 829, 817, 898, 808, 485, 719, 671, 695, 
        582, 119, 204, 711, 530, 49, 575, 126, 718, 120, 444, 932, 423, 185, 453, 144, 158, 979, 7, 301, 871, 515, 61, 211, 615, 
        580, 992, 815, 494, 942, 227, 211, 523, 946, 971, 633, 767, 91, 451, 379, 356, 538, 783, 300, 971, 232, 922, 124, 993, 647, 
        209, 691, 107, 167, 304, 263, 867, 961, 421, 884, 32, 587, 44, 41, 20, 853, 523, 373, 835, 327, 617, 691, 123, 592, 333, 
        818, 654, 386, 479, 859, 300, 938, 288, 279, 553, 594, 643, 106, 847, 546, 818, 492, 232, 846, 588, 806, 92, 973, 650, 150, 
        246, 420, 778, 756, 997, 742, 296, 190, 818, 424, 675, 368, 46, 525, 932, 659, 580, 524, 490, 872, 616, 54, 87, 413, 284, 
        936, 186, 645, 717, 491, 245, 538, 294, 961, 701, 422, 497, 436, 199, 402, 927, 46, 473, 737, 239, 159, 529, 731, 364, 314, 
        155, 272, 147, 411, 403, 850, 855, 769, 527, 753, 734, 729, 337, 997, 796, 187, 331, 344, 243, 684, 290, 335, 921, 450, 238, 
        471, 621, 553, 927, 713, 338, 252, 4, 338, 220, 71, 922, 999, 316, 491, 51, 731, 500, 172, 628, 816, 805, 757, 443, 539, 
    ];

    for k in searches {
        match skip_list.search(&k) {
            Some(data) => println!("Found {}: {}", k, data),
            None => println!("Key {} not found", k),
        }
    }

    for i in 0..skip_list.len() {
        if let (Some(key), Some(data)) = (skip_list.key_at(i), skip_list.data_at(i)) {
            println!("Index {}: key={}, data={}", i, key, data);
        }
    }
    // skip_list.display_list(Some(|key: &i32, data: &char| {
    //     print!("{:>6}:{}", key, data);
    // }));
}
